/*
 * Copyright (c) 2023 Andrew Kannan
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------
            // | ESC |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  8  |  9  |  0  |  -  |  =  | BKSP|BKSP|
            // | TAB  |  Q  |  W  |  E  |  R  |  T  |  Y  |  U  |  I  |  O  |  P  |  [  |  ]  |   "|"   |
            // | CAPS  |  A  |  S  |  D  |  F  |  G  |  H  |  J  |  K  |  L  |  ;  |  '  |     ENTER    |
            // |  SHIFT  |  Z  |  X  |  C  |  V  |  B  |  N  |  M  |  ,  |  .  |  /  |  SHIFT  | MO(1)  |
            // |  CTL  |  WIN  |  ALT  |            SPACE              |  ALT  |  WIN  |  MO(1) |  CTL  |
            // ------------------------------------------------------------------------------------------

            bindings = <
&kp ESC            &kp N1        &kp N2  &kp N3        &kp N4  &kp N5  &kp N6             &kp N7            &kp N8  &kp N9  &kp N0         &kp MINUS       &kp EQUAL         &kp BSPC  &kp BSPC
&kp TAB            &kp Q         &kp W   &kp E         &kp R   &kp T   &kp LEFT_BRACKET   &kp Y             &kp U   &kp I   &kp O          &kp P           &kp SINGLE_QUOTE            &kp BSLH
&kp RIGHT_CONTROL  &kp A         &kp S   &kp D         &kp F   &kp G   &kp RIGHT_BRACKET  &kp H             &kp J   &kp K   &kp L          &kp SEMICOLON                               &kp RET
&kp LSHFT                        &kp Z   &kp X         &kp C   &kp V   &kp B              &kp LS(LEFT_GUI)  &kp N   &kp M   &kp COMMA      &kp PERIOD      &kp SLASH                   &mo 1
&mo 1              &kp LEFT_ALT          &kp LEFT_GUI                  &kp SPACE                                            &kp RIGHT_GUI  &kp DOWN_ARROW  &kp UP_ARROW                &kp GRAVE
            >;
        };

        rgb_layer {
            // ------------------------------------------------------------------------------------------------
            // |    `   | F1  | F2  | F3  | F4  | F5  | F6  | F7  | F8  | F9  | F10  | F11 | F12 |     | DEL  |
            // | EFCT REV|   |  UP |   | HUEUP | SATUP | BRIUP | SPDUP |      |  PGUP |    |     |    |       |
            // | EFCT FWD | LT |  DN  | RT | HUEDN | SATDN | BRIDN | SPDDN | HOME | PGDN | END  |  | BOOTLDR  |
            // |             |     |      |      |     |     |     |     |     |     |     |         |        |
            // |         |      |      |             TOG RGB                | PRT SCR |       |       |  MO(2)|
            // ------------------------------------------------------------------------------------------------

            bindings = <
&kp LC(LG(Q))  &kp F1  &kp F2                &kp F3                &kp F4                &kp F5                &kp F6      &kp F7    &kp F8    &kp F9  &kp F10            &kp F11          &kp F12       &kp DEL  &kp DEL
&none          &none   &kp LS(LG(NUMBER_2))  &kp LS(LG(NUMBER_3))  &kp LS(LG(NUMBER_4))  &kp LG(LS(NUMBER_5))  &none       &none     &none     &none   &none              &none            &none                  &none
&none          &none   &none                 &none                 &none                 &none                 &none       &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT          &none                                   &none
&none                  &none                 &none                 &none                 &none                 &none       &none     &none     &none   &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp K_MUTE             &trans
&none          &none                         &kp C_PREV                                                        &kp C_PLAY                              &kp C_NEXT         &kp LA(UP)       &kp LA(DOWN)           &rgb_ug RGB_TOG
            >;
        };

        bluetooth_layer {
            // ------------------------------------------------------------------------------------------------
            // | BT CLR |     |     |     |     |     |     |     |     |     |     |    |    |       |       |
            // |  BT 1   |   |     |   |       |       |       |       |   |     |    |     |     |           |
            // |   BT 2   |    |      |    |       |       |       |       |      |      |      |  |   Reset  |
            // |    BT 3     |     |      |      |     |     |     |     |     |     |     |         |        |
            // |   BT 4  |      |      |                                    |         |       |       |       |
            // ------------------------------------------------------------------------------------------------

            bindings = <
&bt BT_CLR    &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none
&bt BT_SEL 0  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none         &none
&bt BT_SEL 1  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none                &none
&bt BT_SEL 2         &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none         &none
&bt BT_SEL 3  &none         &none                &none                       &none  &none  &none         &trans
            >;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_bt {
            timeout-ms = <50>;
            key-positions = <61 62>;
            bindings = <&mo 2>;
        };
    };
};
